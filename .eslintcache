[{"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\index.js":"1","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\App.js":"2","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\reportWebVitals.js":"3","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\containers\\Calculator.js":"4","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Display\\Display.js":"5","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Keyboard\\Keyboard.js":"6","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Buttons\\DoubleSizeButton\\DoubleSizeButton.js":"7","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Buttons\\SingleSizeButton\\SingleSizeButton.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":204,"mtime":1607976141740,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":5867,"mtime":1608331531585,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1607893542406,"results":"14","hashOfConfig":"10"},{"size":2106,"mtime":1607713177550,"results":"15","hashOfConfig":"10"},{"size":313,"mtime":1607687628964,"results":"16","hashOfConfig":"10"},{"size":315,"mtime":1607687261547,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"107adyr",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\index.js",[],["37","38"],"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\App.js",[],"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\reportWebVitals.js",[],"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\containers\\Calculator.js",["39","40","41"],"import React, { Component } from \"react\";\r\nimport classes from \"./Calculator.module.css\";\r\nimport Display from \"../components/Display/Display\";\r\nimport Keyboard from \"../components/Keyboard/Keyboard\";\r\n\r\nclass Calculator extends Component {\r\n    state = {\r\n        operations: \"\",\r\n        lastPushed: \"0\",\r\n        decimalClicked: false,\r\n        calculationFinished: false\r\n    }\r\n\r\n\r\n    inputCheck = (input) => {\r\n        let last = 0;\r\n        let ops = \"\";\r\n        if(this.state.calculationFinished && input!=='AC'){\r\n            let num=this.state.lastPushed;\r\n            this.setState({\r\n                operations:num,\r\n                calculationFinished:false\r\n            })\r\n        }\r\n        else if (input === \"AC\") {\r\n            this.setState(\r\n                {\r\n                    lastPushed: last,\r\n                    operations: ops,\r\n                    decimalClicked: false,\r\n                    calculationFinished: false\r\n                }\r\n            )\r\n        }\r\n\r\n        else if (input >= 0) {\r\n            if (this.state.decimalClicked) {\r\n                last = this.state.lastPushed.concat(input);\r\n                ops = this.state.operations.concat(input);\r\n                this.setState({\r\n                    lastPushed: last,\r\n                    operations: ops\r\n                })\r\n            }\r\n            else {\r\n                last = 0;\r\n                if (this.state.lastPushed >= 0) {\r\n                    last = Number(this.state.lastPushed);\r\n                }\r\n                last = Number(last * 10) + Number(input);\r\n                ops = this.state.operations.concat(input);\r\n                this.setState({\r\n                    lastPushed: last,\r\n                    operations: ops\r\n                })\r\n            }\r\n        }\r\n\r\n        else if (input === '.') {\r\n            if (!this.state.decimalClicked) {\r\n                if (this.state.lastPushed >= 0) {\r\n                    last = this.state.lastPushed;\r\n                    last = last + \".\";\r\n                    ops = this.state.operations.concat(\".\");\r\n                    this.setState({\r\n                        lastPushed: last,\r\n                        operations: ops\r\n                    })\r\n                }\r\n                else {\r\n                    ops = this.state.operations\r\n                    ops = ops.concat(\"0.\");\r\n                    this.setState({\r\n                        lastPushed: \"0.\",\r\n                        operations: ops\r\n                    });\r\n                }\r\n                this.setState({\r\n                    decimalClicked: true\r\n                })\r\n            }\r\n        }\r\n\r\n        else {\r\n            if (this.state.lastPushed === \".\" || this.state.lastPushed >= 0 && input !== \"=\") {\r\n                ops = this.state.operations;\r\n                ops = ops.concat(input);\r\n                this.setState({\r\n                    lastPushed: input,\r\n                    operations: ops\r\n                })\r\n            }\r\n            else if (input === \"-\") {\r\n                ops = this.state.operations;\r\n                if (this.state.lastPushed === \"-\") {\r\n                    if (ops[ops.length - 2] === '.' || (ops[ops.length - 2] >= 0)) {\r\n                        ops = ops.concat(input);\r\n                        this.setState({\r\n                            lastPushed: input,\r\n                            operations: ops\r\n                        })\r\n                    }\r\n                }\r\n\r\n                else {\r\n                    ops = this.state.operations;\r\n                    ops = ops.concat(input);\r\n                    this.setState({\r\n                        lastPushed: input,\r\n                        operations: ops\r\n                    })\r\n                }\r\n            }\r\n\r\n            else if (input === '+' || input === 'x' || input === '/' || input === \"=\") {\r\n                if (!(this.state.lastPushed >= 0) && input !== \"=\") {\r\n                    ops = this.state.operations.slice(0, -1);\r\n                    let check = ops[ops.length - 1];\r\n                    if (check !== '.' && !(check >= 0)) {\r\n                        ops = ops.slice(0, -1);\r\n                    }\r\n                    ops = ops.concat(input);\r\n                    this.setState({\r\n                        lastPushed: input,\r\n                        operations: ops\r\n                    })\r\n                }\r\n                else {\r\n                    ops = this.state.operations;\r\n                    let result = this.calculateOperation();\r\n                    if (!(ops[ops.length - 1] >= 0)) {\r\n                        ops = ops.slice(0, -1);\r\n                    }\r\n                    ops = ops.concat(\"=\" + result);\r\n\r\n                    this.setState({\r\n                        operations: ops,\r\n                        lastPushed: result,\r\n                        calculationFinished: true\r\n                    })\r\n                }\r\n            }\r\n            this.setState({\r\n                decimalClicked: false\r\n            })\r\n        }\r\n    }\r\n\r\n    clickHandler = (event) => {\r\n        this.inputCheck(event);\r\n    }\r\n\r\n    calculateOperation() {\r\n        let ops = this.state.operations;\r\n        let result = 0;\r\n        ops = ops.replace('--', '+').replace('x', '*');\r\n        if (!(ops[ops.length - 1] >= 0)) {\r\n            ops = ops.slice(0, -1);\r\n        }\r\n        result = Number(eval(ops).toFixed(4));\r\n        if (result - Math.floor(result) === 0) {\r\n            result = result.toFixed(0);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.Calculator}>\r\n                <Display id=\"display\" last={this.state.lastPushed} ops={this.state.operations} />\r\n                <Keyboard clicked={this.clickHandler} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Calculator;","C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Display\\Display.js",[],"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Keyboard\\Keyboard.js",[],"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Buttons\\DoubleSizeButton\\DoubleSizeButton.js",[],["42","43"],"C:\\Users\\FH189\\OneDrive\\Рабочий стол\\freeCodeCamp\\calculator\\src\\components\\Buttons\\SingleSizeButton\\SingleSizeButton.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":85,"column":47,"nodeType":"50","messageId":"51","endLine":85,"endColumn":49},{"ruleId":"48","severity":1,"message":"49","line":85,"column":77,"nodeType":"50","messageId":"51","endLine":85,"endColumn":79},{"ruleId":"52","severity":1,"message":"53","line":160,"column":25,"nodeType":"54","messageId":"55","endLine":160,"endColumn":29},{"ruleId":"44","replacedBy":"56"},{"ruleId":"46","replacedBy":"57"},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","no-eval","eval can be harmful.","CallExpression","unexpected",["58"],["59"],"no-global-assign","no-unsafe-negation"]